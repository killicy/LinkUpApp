{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Documents\\\\Assign\\\\Lonk\\\\LinkUpApp\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MainPage from \"./app/screens/MainPage\";\nimport WelcomeScreen from \"./app/screens/WelcomeScreen\";\nimport ResetPassword from \"./app/screens/ResetPassword\";\nimport SearchFriends from \"./app/screens/SearchFriends\";\nimport Login from \"./app/screens/Login\";\nimport EmailType from \"./app/screens/EmailType\";\nimport UploadEvent from \"./app/screens/UploadEvent\";\nimport Register from \"./app/screens/Register\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      username: '',\n      password: '',\n      msg: '',\n      buttonDisabled: false,\n      isSignedIn: true,\n      User: 'ww'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://localhost:5000/api/user/isLoggedIn', {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': 'http://localhost:19006'\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return _this2.setState({});\n              }));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, React.createElement(MainPage, {\n        data: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), this.state.isSignedIn ? React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }) : React.createElement(Stack.Screen, {\n        name: \"MainPage\",\n        component: MainPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["E:/Documents/Assign/Lonk/LinkUpApp/App.js"],"names":["StatusBar","React","MainPage","WelcomeScreen","ResetPassword","SearchFriends","Login","EmailType","UploadEvent","Register","NavigationContainer","createStackNavigator","Stack","App","state","username","password","msg","buttonDisabled","isSignedIn","User","fetch","method","credentials","headers","then","response","json","data","setState","console","log","Component"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;;;AAEA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;IAIME,G;;;;;AACJ,iBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,GAAG,EAAE,EAHM;AAIXC,MAAAA,cAAc,EAAE,KAJL;AAKXC,MAAAA,UAAU,EAAE,IALD;AAMXC,MAAAA,IAAI,EAAE;AANK,KAAb;AAFW;AAUZ;;;;;;;;;;;;;+CAGSC,KAAK,CAAC,4CAAD,EAA+C;AACxDC,gBAAAA,MAAM,EAAE,KADgD;AAExDC,gBAAAA,WAAW,EAAE,SAF2C;AAGxDC,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB,kBAFT;AAGP,iDAA+B;AAHxB;AAH+C,eAA/C,CAAL,CAOAC,IAPA,CAOK,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eAPb,EAOkCF,IAPlC,CAOuC,UAAAG,IAAI;AAAA,uBAAI,MAAI,CAACC,QAAL,CAAc,EAAd,CAAJ;AAAA,eAP3C,C;;;;;;;;;AAUNC,cAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;6BAII;AACN,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKjB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKA,KAAL,CAAWK,UAAX,GACC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEb,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAEJ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADF;AASD;;;;EAtCeD,KAAK,CAAC+B,S;;AAyCxB,eAAenB,GAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TouchableHighlight, Image, Alert, SafeAreaView, Button, Platform, Dimensions } from 'react-native';\r\nimport MainPage from './app/screens/MainPage';\r\nimport WelcomeScreen from './app/screens/WelcomeScreen';\r\nimport ResetPassword from './app/screens/ResetPassword';\r\nimport SearchFriends from './app/screens/SearchFriends';\r\nimport Login from './app/screens/Login';\r\nimport EmailType from './app/screens/EmailType';\r\nimport UploadEvent from './app/screens/UploadEvent';\r\nimport Register from './app/screens/Register';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      msg: '',\r\n      buttonDisabled: false,\r\n      isSignedIn: true,\r\n      User: 'ww'\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      await fetch('https://localhost:5000/api/user/isLoggedIn', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': 'http://localhost:19006',\r\n        }}).then(response => response.json()).then(data => this.setState({ }));\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <NavigationContainer>\r\n        <MainPage data={this.state}/>\r\n        {this.state.isSignedIn ? (\r\n          <Stack.Screen name=\"Login\" component={Login} />\r\n        ) : (\r\n          <Stack.Screen name=\"MainPage\" component={MainPage} />\r\n        )}\r\n      </NavigationContainer>);\r\n  }\r\n\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}