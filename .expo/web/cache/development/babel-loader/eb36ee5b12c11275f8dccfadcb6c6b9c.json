{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"E:\\\\Documents\\\\Assign\\\\Lonk\\\\LinkUpApp\\\\app\\\\screens\\\\Register.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nfunction Register(props) {\n  var _this = this;\n\n  (function _callee(doRegister) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(process.env.REACT_APP_API_URL + '/api/user/register', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': process.env.REACT_APP_CLIENT_URL\n              },\n              body: JSON.stringify({\n                Username: _this.state.username,\n                Email: _this.state.email,\n                Password: _this.state.password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return _this.setState({\n                username: data.username,\n                message: data.msg,\n                success: data.success\n              });\n            }));\n\n          case 2:\n            if (_this.state.success) {\n              _this.props.history.push('/');\n            } else {}\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../assets/background.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.loginButton,\n    Button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(Image, {\n    style: styles.WhiteScreen,\n    source: require(\"../assets/WhiteScreen.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }\n  }), React.createElement(Text, {\n    style: styles.enterNewPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  }, \" Create a username:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }\n  }), React.createElement(Text, {\n    style: styles.ReenterNewPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }\n  }, \" Create a new password:\"), React.createElement(TextInput, {\n    style: styles.input2,\n    placeholder: \"...\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }\n  }), React.createElement(Text, {\n    style: styles.ReenterNewPassword2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }\n  }, \" Verify new password:\"), React.createElement(TextInput, {\n    style: styles.input3,\n    placeholder: \"...\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }\n  }), React.createElement(View, {\n    style: styles.Submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }\n  }, React.createElement(Button, {\n    color: \"blue\",\n    title: \"Create account\",\n    onPress: function onPress() {\n      return alert(\"Account created\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }))));\n}\n\nvar containerStyle = {\n  backgroundColor: \"orange\"\n};\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"flex-end\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 0\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8\n  },\n  logo: {\n    width: 300,\n    height: 250,\n    position: 'absolute',\n    top: 30,\n    left: 55\n  },\n  Submit: {\n    width: 200,\n    height: 50,\n    position: 'absolute',\n    top: 650,\n    left: 100,\n    backgroundColor: 'lightskyblue'\n  },\n  input: {\n    width: 240,\n    height: 50,\n    position: 'absolute',\n    top: 350,\n    left: 80,\n    borderWidth: 1,\n    borderColor: 'lightskyblue',\n    padding: 8\n  },\n  input2: {\n    width: 240,\n    height: 50,\n    position: 'absolute',\n    top: 460,\n    left: 80,\n    borderWidth: 1,\n    borderColor: 'lightskyblue',\n    padding: 8\n  },\n  input3: {\n    width: 240,\n    height: 50,\n    position: 'absolute',\n    top: 570,\n    left: 80,\n    borderWidth: 1,\n    borderColor: 'lightskyblue',\n    padding: 8\n  },\n  registerButton: {\n    width: \"100%\",\n    backgroundColor: \"lightskyblue\",\n    height: 50,\n    bottom: 75\n  },\n  signinButton: {\n    width: \"100%\",\n    backgroundColor: \"navy\",\n    height: 50,\n    bottom: 80\n  },\n  WhiteScreen: {\n    width: \"100%\",\n    backgroundColor: \"white\",\n    height: 550,\n    bottom: 50,\n    width: '100%'\n  },\n  enterNewPassword: {\n    height: 20,\n    bottom: 520,\n    left: 66,\n    color: 'gray'\n  },\n  ReenterNewPassword: {\n    height: 20,\n    bottom: 430,\n    left: 66,\n    color: 'gray'\n  },\n  ReenterNewPassword2: {\n    height: 20,\n    bottom: 340,\n    left: 66,\n    color: 'gray'\n  },\n  forgotPasswordButton: {\n    width: \"50%\",\n    backgroundColor: \"transparent\",\n    height: 50,\n    bottom: 60,\n    left: 210\n  }\n});\nexport default Register;","map":{"version":3,"sources":["E:/Documents/Assign/Lonk/LinkUpApp/app/screens/Register.js"],"names":["React","Register","props","doRegister","fetch","process","env","REACT_APP_API_URL","method","headers","REACT_APP_CLIENT_URL","body","JSON","stringify","Username","state","username","Email","email","Password","password","then","response","json","data","setState","message","msg","success","history","push","styles","container","background","require","logo","loginButton","WhiteScreen","enterNewPassword","input","ReenterNewPassword","input2","ReenterNewPassword2","input3","Submit","alert","containerStyle","backgroundColor","StyleSheet","create","flex","justifyContent","marginHorizontal","title","textAlign","marginVertical","width","height","position","top","left","borderWidth","borderColor","padding","registerButton","bottom","signinButton","color","forgotPasswordButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Text, Alert, Button, Image, ImageBackground, SafeAreaView, StyleSheet, TouchableHighlight, View, TextInput } from 'react-native';\r\n\r\n\r\n\r\nfunction Register(props) {\r\n    async doRegister => {\r\n        await fetch(process.env.REACT_APP_API_URL + '/api/user/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': process.env.REACT_APP_CLIENT_URL,\r\n          },\r\n          body: JSON.stringify({\r\n            Username: this.state.username,\r\n            Email: this.state.email,\r\n            Password: this.state.password\r\n          })}).then(response => response.json()).then(data => this.setState({ username: data.username, message: data.msg, success: data.success}));\r\n      \r\n          if(this.state.success){\r\n            this.props.history.push('/');\r\n          }\r\n          else {\r\n          }\r\n        }  \r\n    return (\r\n        \r\n     \r\n       \r\n\r\n<View style={styles.container}>\r\n\r\n       \r\n         <ImageBackground \r\n        style={styles.background}\r\n        source={require('../assets/background.jpg')}\r\n        >\r\n            <Image style={styles.logo} source={require('../assets/logo.png')} />\r\n            <View \r\n            style={styles.loginButton}\r\n            Button></View>\r\n            \r\n\r\n\r\n\r\n\r\n<Image style={styles.WhiteScreen} source={require(\"../assets/WhiteScreen.png\")} />\r\n<Text style= {styles.enterNewPassword}> Create a username:</Text>\r\n<TextInput\r\nstyle={styles.input}\r\nplaceholder='...' \r\n/>\r\n\r\n\r\n\r\n<Text style= {styles.ReenterNewPassword}> Create a new password:</Text>\r\n<TextInput\r\nstyle={styles.input2}\r\nplaceholder='...' \r\nsecureTextEntry={true}/>\r\n\r\n<Text style= {styles.ReenterNewPassword2}> Verify new password:</Text>\r\n<TextInput\r\nstyle={styles.input3}\r\nplaceholder='...' \r\nsecureTextEntry={true}/>\r\n\r\n<View style={styles.Submit}>\r\n\r\n<Button\r\n  color=\"blue\"\r\n    title=\"Create account\"\r\n\r\n    onPress={() => alert(\"Account created\")}\r\n  />\r\n</View>\r\n        </ImageBackground>\r\n\r\n        \r\n</View>\r\n);\r\n}\r\n\r\nconst containerStyle = {backgroundColor: \"orange\"};\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex:1,\r\n        justifyContent: \"flex-end\",\r\n    },\r\n   \r\n    container: {\r\n        flex:1,\r\n        justifyContent: 'center',\r\n        marginHorizontal: 0,\r\n      },\r\n      title: {\r\n    textAlign: 'center',\r\n    marginVertical: 8,\r\n  },\r\n    logo: {\r\n        width:300,\r\n        height:250,\r\n        position: 'absolute',\r\n        top: 30,\r\n        left: 55,\r\n\r\n    },\r\n\r\n    Submit: {\r\n        width:200,\r\n        height:50,\r\n        position: 'absolute',\r\n        top: 650,\r\n        left: 100,\r\n        backgroundColor: 'lightskyblue',\r\n\r\n    },\r\n    input: {\r\n        width:240,\r\n        height:50,\r\n        position: 'absolute',\r\n        top: 350,\r\n        left: 80,\r\n        borderWidth: 1,\r\n        borderColor: 'lightskyblue',\r\n        padding: 8,\r\n        \r\n\r\n    },\r\n    input2: {\r\n        width:240,\r\n        height:50,\r\n        position: 'absolute',\r\n        top: 460,\r\n        left: 80,\r\n        borderWidth: 1,\r\n        borderColor: 'lightskyblue',\r\n        padding: 8,\r\n        \r\n\r\n    },\r\n    input3: {\r\n        width:240,\r\n        height:50,\r\n        position: 'absolute',\r\n        top: 570,\r\n        left: 80,\r\n        borderWidth: 1,\r\n        borderColor: 'lightskyblue',\r\n        padding: 8,\r\n        \r\n\r\n    },\r\n    registerButton: {\r\n        width: \"100%\",\r\n        backgroundColor: \"lightskyblue\",\r\n        height: 50,\r\n        bottom: 75,\r\n    },\r\n    signinButton: {\r\n        width: \"100%\",\r\n        backgroundColor: \"navy\",\r\n        height: 50,\r\n        bottom: 80,\r\n    },\r\n    WhiteScreen: {\r\n        width: \"100%\",\r\n        backgroundColor: \"white\",\r\n        height: 550,\r\n        bottom: 50,\r\n        width: '100%',\r\n    },\r\n    enterNewPassword: {\r\n        height: 20,\r\n        bottom: 520,\r\n        left: 66,\r\n        color: 'gray',\r\n    },\r\n    ReenterNewPassword: {\r\n        height: 20,\r\n        bottom: 430,\r\n        left: 66,\r\n        color: 'gray',\r\n    },\r\n    ReenterNewPassword2: {\r\n        height: 20,\r\n        bottom: 340,\r\n        left: 66,\r\n        color: 'gray',\r\n    },\r\n    forgotPasswordButton: {\r\n        width: \"50%\",\r\n        backgroundColor: \"transparent\",\r\n        height: 50,\r\n        bottom: 60,\r\n        left: 210,\r\n    \r\n\r\n    },\r\n});\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}